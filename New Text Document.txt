%ROWTYPE
var table%ROWTYPE
----------
%TYPE
var table.colonne%type
------------------------------------
set serveroutput on
DECLARE
  TYPE POINT IS RECORD(abscisse number,ordonnee number);
mypoint point;
BEGIN
mypoint.abscisse:=2;
mypoint.ordonnee:=5;
dbms_output.put_line('abscisse:'|| mypoint.abscisse || 'ordonnee:' || mypoint.ordonnee);
end;
----------------------------------------
set serveroutput on
DECLARE nom varchar2(15);

BEGIN
select NomP into nom from Personne Where numP=7501;

dbms_output.put_line('nom:'|| nom);
end;
---------------------------------------------------
set serveroutput on
DECLARE
  TYPE tab IS TABLE OF VARCHAR2(10) INDEX BY BINARY_INTEGER;
mytable tab;
BEGIN
select nomP into mytable(-3) from Personne where numP=7369; 
select nomP into mytable(-2) from Personne where numP=7566; 
select nomP into mytable(-0) from Personne where numP=7901; 
dbms_output.put_line(mytable(-3));
dbms_output.put_line(mytable(-2));
dbms_output.put_line(mytable(-0));
dbms_output.put_line(mytable.first);
dbms_output.put_line(mytable.last);
dbms_output.put_line(mytable.count);
end;
-------------------------------------------------------------
ACCEPT age NUMBER PROMPT 'tapez votre age';
begin
dbms_output.put_line('vottr age est'||&age);
end;
------------------------------------------------------------
variable de session--> en dehors du bloc pl-sql 
dans l'appel à l'intérieur du bloc sql, on la précede par ":"
l'affichage se fait aprés le bloc pl-sql (aprés end)
-------------------------------------------------------------
set serveroutput on
variable var1 number default 0;
DECLARE num NUMBER(5);
BEGIN
num:=num+5;
:var1:=num;
end;
/
print var1;

-------------------------------------------------------------
///////////////ESSAI HAMOUDA L BAHRIIIIII////////////
variable var1 number;

ACCEPT num NUMBER(5) prompt 'saisir '; 
begin 
:var1:=&num +5;
end ;
/
print var1;
---------------------------------------------------------------------
//////////conditions///////////////
-----les instructions en dehors de pl-sql s'execute toutes seuleeees!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!---
ACCEPT age NUMBER PROMPT 'tapez votre age: ';
begin
if &age<=15 then dbms_output.put_line('enfant');
 else dbms_output.put_line('adulte');
end if;
end;
/
----------------------------------------------------TP3---------------------------------------------------------------
ACCEPT num1 NUMBER PROMPT 'tapez le premier numero: ';
ACCEPT num2 NUMBER PROMPT 'tapez le deuxieme numero: ';
begin
if &num1<&num2 then dbms_output.put_line( &num1 || 'est inférieur à' || &num2 );
elsif &num1>&num2 then dbms_output.put_line(&num1 || 'est supérieur à' || &num2);
else dbms_output.put_line(&num1 || 'est égal à' || &num2);
end if;
end;
/
----------------------------------------------------------------------------------------------------------------------------

DECLARE moysal20 NUMBER(8); salmin20 NUMBER(10);
P Personne%RowType;
BEGIN
select AVG(SalaireP) into moysal20 from Personne Where numServP=20;
select MIN(SalaireP) into salmin20 from Personne where numServP=20;
select * into P from Personne where NumServP=20 and SalaireP=(select min(SalaireP) from Personne where NumServP=20);
dbms_output.put_line('le salaire moyen du service 20 est :'|| moysal20);
dbms_output.put_line('le salaire minimal du service 20 est :'|| salmin20);
dbms_output.put_line('nom :'|| P.nomP || 'le salaire est:' || P.salaireP);
if moysal20-salmin20>200 then salmin20:=salmin20*2;
dbms_output.put_line('nom :'|| P.nomP || ' le salaire est:' || salmin20);
end if;
end;
-------------------------------------------------------------------------------------------------------------------------------

DECLARE maxsal NUMBER(8); minsal NUMBER(10);
P1 Personne%RowType;
P2 Personne%RowType;
BEGIN
select MAX(SalaireP) into maxsal from Personne;
select MIN(SalaireP) into minsal from Personne;
select * into P1 from Personne where SalaireP=maxsal;
select * into P2 from Personne where SalaireP=minsal;
dbms_output.put_line('nom :'|| P1.nomP || 'le salaire est:' || P1.salaireP);
dbms_output.put_line('nom :'|| P2.nomP || ' le salaire est:' || P2.salaireP);
if minsal<300 then minsal:=minsal*2;
end if;
if maxsal>1500 then maxsal:=maxsal/2;
end if;
dbms_output.put_line('nom :'|| P1.nomP || 'le salaire est:' || maxsal);
dbms_output.put_line('nom :'|| P2.nomP || ' le salaire est:' ||minsal);
end;
/
-------------------------------------------------------------------------------------------
ACCEPT age NUMBER PROMPT 'tapez votre age: ';

begin
case
when &age<11 then dbms_output.put_line( 'ENFANT!' );
when &age>=12 and &age<=18 then dbms_output.put_line( 'ADOLESCENT!' );
when &age>=19 and &age<=59 then dbms_output.put_line( 'ADULTE!' );
when &age>60 then dbms_output.put_line( 'SENIOR!' );
end case;
end;
/
----------------------------------------------------------------------------------------------

ACCEPT numserv NUMBER PROMPT 'tapez le numero du service: ';
DECLARE nbemp NUMBER(8); salmoy NUMBER(10); salmax NUMBER(10);
BEGIN
select COUNT(numP) into nbemp from Personne where numServP=&numserv;
select AVG(salaireP) into salmoy from Personne where numServP=&numserv;
select MAX(salaireP) into salmax from Personne where numServP=&numserv;
case &numserv
when 10 then dbms_output.put_line( 'le nombre total d''employés du service ' || &numserv || ' est:' || nbemp );
when 30 then dbms_output.put_line( 'le salaire moyen du service ' || &numserv || ' est:' || salmoy);
when 60 then dbms_output.put_line( 'le salaire maximal du service ' || &numserv || ' est:' || salmax);
else dbms_output.put_line( 'AUCUN TRAITEMENT');
end case;
end;
/

